{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","list","new","addItem","a","fetch","method","headers","body","JSON","stringify","content","catch","error","console","log","fetchList","handleChange","e","value","target","setState","this","listCopy","then","response","json","data","forEach","item","push","onChange","type","onClick","length","map","id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkEeA,E,4MA9DfC,MAAO,CACLC,KAAM,GACNC,IAAM,I,EAwBLC,Q,sBAAU,sBAAAC,EAAA,sEAEHC,MAAM,sCAAwC,CAClDC,OAAQ,OACRC,QAAQ,CACN,eAAiB,oBAEnBC,KAAMC,KAAKC,UAAU,CACrBC,QAAW,EAAKX,MAAME,QAErBU,OAAM,SAASC,GAChBC,QAAQC,IAAI,QAASF,MAXd,OAaP,EAAKG,YAbE,2C,EAeXC,aAAe,SAACC,GACf,IAAIC,EAAQD,EAAEE,OAAOD,MACtB,EAAKE,SAAS,CACZnB,IAAMiB,K,kEArCNG,KAAKN,YACPF,QAAQC,IAAIO,KAAKtB,S,gKAIXuB,EAAW,G,SACVlB,MAAM,wCACZmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OACLA,EAAKC,SAAQ,SAAAC,GACXN,EAASO,KAAKD,S,OAIpBP,KAAKD,SAAS,CACZpB,KAAOsB,IACN,kBAAMT,QAAQC,IAAI,EAAKf,U,qIA0BzB,OACE,gCACA,uBAAO+B,SAAUT,KAAKL,aAAce,KAAK,SAAQ,wBAAQC,QAASX,KAAKnB,QAAtB,iBAChDmB,KAAKtB,MAAMC,KAAKiC,OAAQ,GAAKZ,KAAKtB,MAAMC,KAAKkC,KAAI,SAAAN,GACnD,OAAQ,6BAAmBA,EAAKlB,SAAfkB,EAAKO,c,GAvDTC,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.51754e06.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n\nstate ={\n  list :[],\n  new : ''\n}\n\n\n  componentDidMount(){\n    this.fetchList()\n  console.log(this.state)\n  }\n\n async fetchList(){\n    let listCopy = []\n   await fetch('http://localhost:8000/api/show-list/')\n  .then(response => response.json()) \n  .then(data => \n       data.forEach(item => {\n         listCopy.push(item)\n       })\n    );\n  \n   this.setState({\n     list : listCopy\n   }, () => console.log(this.state))\n  }\n\n   addItem = async () =>{\n    // let listCopy = this.state.list\n    await fetch('http://localhost:8000/api/add-list/' , {\n      method: 'post',\n      headers:{\n        \"content-type\" : 'application/json',\n      },\n      body: JSON.stringify({\n      content:   this.state.new\n      })\n    }).catch(function(error){\n      console.log('error', error)\n    })\n      this.fetchList()\n  }\n  handleChange = (e) =>{\n   let value = e.target.value\n  this.setState({\n    new : value\n  })\n\n  }\n  render() {\n    return (\n      <div>\n      <input onChange={this.handleChange} type='text'/><button onClick={this.addItem}>Add</button>\n     { this.state.list.length> 0 && this.state.list.map(item => {\n     return  <h1 key={item.id}>{item.content}</h1>\n     })\n     \n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}